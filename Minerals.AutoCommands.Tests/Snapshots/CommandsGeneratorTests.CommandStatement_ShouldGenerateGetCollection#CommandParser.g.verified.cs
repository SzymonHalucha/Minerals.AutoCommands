//HintName: CommandParser.g.cs
// <auto-generated>
// This code was generated by a tool.
// Name: Minerals.AutoCommands.Generators
// Version: {Removed}
// </auto-generated>
namespace Minerals.AutoCommands
{
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed class CommandParser : global::Minerals.AutoCommands.Interfaces.ICommandParser
    {
        private readonly string[] _aliases = new string[] { "test1", "test2", "test3", };

        public global::Minerals.AutoCommands.Interfaces.ICommandStatement Parse(string arg, global::System.StringComparison comparison)
        {
            if (arg.Equals("test1", comparison)) return (global::Minerals.AutoCommands.Interfaces.ICommandStatement)new Minerals.Examples.TestCommand1();
            if (arg.Equals("test2", comparison)) return (global::Minerals.AutoCommands.Interfaces.ICommandStatement)new Minerals.Examples.TestCommand1();
            if (arg.Equals("test3", comparison)) return (global::Minerals.AutoCommands.Interfaces.ICommandStatement)new Minerals.Examples.TestCommand1();
            return null;
        }

        public bool IsAlias(string text, global::System.StringComparison comparison)
        {
            foreach (var item in _aliases)
            {
                if (text.Equals(item, comparison))
                {
                    return true;
                }
            }
            return false;
        }
    }
}