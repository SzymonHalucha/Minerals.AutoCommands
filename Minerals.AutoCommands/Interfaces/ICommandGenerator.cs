namespace Minerals.AutoCommands.Interfaces
{
    [Generator]
    public class ICommandGenerator : IIncrementalGenerator
    {
        public void Initialize(IncrementalGeneratorInitializationContext context)
        {
            context.RegisterPostInitializationOutput(static (context) =>
            {
                context.AddSource("ICommand.g.cs", GenerateAttribute());
            });
        }

        public static SourceText GenerateAttribute()
        {
            const string source = """
            // <auto-generated />

            namespace Minerals.AutoCommands
            {
                public interface ICommand
                {
                    void Evaluate(global::Minerals.AutoCommands.ICommandPipeline pipeline, string[] arguments, int index);
                    void ShowHelp();
                    bool Execute();
                }
            }
            """;
            return SourceText.From(source, Encoding.UTF8);
        }
    }
}